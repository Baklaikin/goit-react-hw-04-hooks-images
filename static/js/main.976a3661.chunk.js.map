{"version":3,"sources":["components/searchBar/searchBar.styled.jsx","components/searchBar/searchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/LoadMoreBtn/LoadMore.styled.jsx","components/LoadMoreBtn/LoadMore.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","App.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.js","services/FetchApi.jsx","index.js"],"names":["Header","styled","header","SearchButton","button","Span","span","Input","input","Form","form","SearchBar","onSubmit","event","preventDefault","word","target","searchForm","value","toast","warn","type","name","autoComplete","autoFocus","placeholder","Item","li","Image","img","ImageGalleryItem","images","getBigImage","map","webformatURL","tags","largeImageURL","src","alt","onClick","List","ul","ImageGallery","largePicture","LoadMoreBtn","LoadMore","onAction","Overlay","div","ModalWindow","Modal","picture","handleOverlayClick","e","currentTarget","code","useEffect","window","addEventListener","removeEventListener","Container","LoadContainer","LoaderSpinner","color","height","width","App","useState","pictureName","setPictureName","pictures","setPictures","largeImage","setLargeImage","status","setStatus","page","setPage","openModal","setOpenModal","toggleModal","axios","get","then","response","data","hits","FetchCollection","newPictures","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","catch","error","console","log","message","showLoadMoreButton","length","showModal","showLoader","searchWord","image","position","autoClose","hideProgressBar","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.976a3661.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n","import { toast } from \"react-toastify\";\nimport {\n  Header,\n  SearchButton,\n  Span,\n  Input,\n  Form,\n} from \"components/searchBar/searchBar.styled\";\n\nexport const SearchBar = ({ onSubmit }) => {\n  const name = (event) => {\n    event.preventDefault();\n    const word = event.target.searchForm.value;\n    if (word === \"\") {\n      toast.warn(\"Введите слово\");\n      return;\n    }\n    onSubmit(word);\n  };\n  return (\n    <Header>\n      <Form onSubmit={name}>\n        <SearchButton type=\"submit\">\n          <Span></Span>\n        </SearchButton>\n\n        <Input\n          name=\"searchForm\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    </Header>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import {\n  Item,\n  Image,\n} from \"components/ImageGalleryItem/ImageGalleryItem.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGalleryItem = ({ images, getBigImage }) => {\n  return images.map(({ webformatURL, tags, largeImageURL }) => {\n    return (\n      <Item key={largeImageURL}>\n        <Image\n          src={webformatURL}\n          alt={tags}\n          onClick={() => getBigImage(largeImageURL)}\n        />\n      </Item>\n    );\n  });\n};\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.array,\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n  largeImageURL: PropTypes.string,\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { ImageGalleryItem } from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport { List } from \"components/ImageGallery/ImageGallery.styled.jsx\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGallery = ({ images, largePicture }) => {\n  return (\n    <List>\n      <ImageGalleryItem images={images} getBigImage={largePicture} />\n    </List>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const LoadMoreBtn = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import { LoadMoreBtn } from \"components/LoadMoreBtn/LoadMore.styled\";\n\nexport const LoadMore = ({ onAction }) => {\n  return (\n    <LoadMoreBtn type=\"button\" onClick={() => onAction()}>\n      Load more\n    </LoadMoreBtn>\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from \"react\";\nimport { Overlay, ModalWindow } from \"components/Modal/Modal.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const Modal = ({ picture, onClick }) => {\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget || e.code === \"Escape\") {\n      onClick();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleOverlayClick);\n    return () => {\n      window.removeEventListener(\"keydown\", handleOverlayClick);\n    };\n  });\n\n  return (\n    <Overlay onClick={handleOverlayClick}>\n      <ModalWindow>\n        <img src={picture} alt=\"Big\" />\n      </ModalWindow>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  picture: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const LoadContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { LoadContainer } from \"components/Loader/Loader.styled\";\nimport Loader from \"react-loader-spinner\";\n\nexport const LoaderSpinner = () => {\n  return (\n    <LoadContainer>\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={50} width={50} />\n    </LoadContainer>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { SearchBar } from \"components/searchBar\";\nimport { ImageGallery } from \"components/ImageGallery/ImageGallery\";\nimport { LoadMore } from \"components/LoadMoreBtn/LoadMore\";\nimport { Modal } from \"components/Modal/Modal\";\nimport { FetchCollection } from \"./services/FetchApi\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Container } from \"App.styled\";\nimport { LoaderSpinner } from \"components/Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.styled\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [pictureName, setPictureName] = useState(null);\n  const [pictures, setPictures] = useState([]);\n  const [largeImage, setLargeImage] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n  const [page, setPage] = useState(1);\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleInput = (searchWord) => {\n    setPictureName(searchWord);\n    setPictures([]);\n    setPage(1);\n  };\n\n  const toggleModal = () => setOpenModal(!openModal);\n\n  useEffect(() => {\n    if (pictureName === null && page === 1) {\n      return;\n    }\n\n    setStatus(\"pending\");\n    FetchCollection({ pictureName, page })\n      .then((newPictures) => {\n        if (page === 1) {\n          setPictures(newPictures);\n        } else {\n          setPictures((prevState) => [...prevState, ...newPictures]);\n        }\n        setStatus(\"resolved\");\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  }, [pictureName, page]);\n\n  const onLoadMoreClick = () => setPage((prevState) => prevState + 1);\n\n  const bigPictureHandler = (image) => {\n    setLargeImage(image);\n    toggleModal();\n  };\n\n  const showLoadMoreButton = pictures.length > 0;\n  const showModal = openModal;\n  const showLoader = status === \"pending\";\n\n  return (\n    <Container>\n      <SearchBar onSubmit={handleInput} />\n      {showLoader && <LoaderSpinner />}\n      <ImageGallery images={pictures} largePicture={bigPictureHandler} />\n      {showLoadMoreButton && <LoadMore onAction={onLoadMoreClick} />}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={1200}\n        hideProgressBar={true}\n      />\n      {showModal && <Modal picture={largeImage} onClick={toggleModal} />}\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  pictureName: PropTypes.string,\n  pictures: PropTypes.array,\n  largeImage: PropTypes.string,\n  status: PropTypes.string,\n  page: PropTypes.number,\n  openModal: PropTypes.bool,\n};\n\nexport default App;\n","import axios from \"axios\";\n\nexport const FetchCollection = ({ pictureName, page }) => {\n  const key = \"22628996-cf4023f9c883b96dd8e407c0b\";\n  const BASE_URL = \"https://pixabay.com/api\";\n  const params = \"image_type=photo&orientation=horizontal&per_page=12\";\n\n  const response = axios\n    .get(`${BASE_URL}/?key=${key}&q=${pictureName}&page=${page}&${params}`)\n    .then((response) => response.data.hits);\n  return response;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}